from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart, StateFilter, Text
from aiogram.filters.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.fsm.storage.redis import RedisStorage, Redis
from aiogram.types import (CallbackQuery,
                           InlineKeyboardButton,
                           InlineKeyboardMarkup,
                           Message,
                           PhotoSize)

from config import Config, load_config

CONFIG: Config = load_config()
TOKEN = CONFIG.tg_bot.token

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Redis
REDIS: Redis = Redis(host='localhost')
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (—Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RedisStorage)
STORAGE: RedisStorage = RedisStorage(redis=REDIS)

BOT: Bot = Bot(token=TOKEN)
DP: Dispatcher = Dispatcher(storage=STORAGE)

# –°–æ–∑–¥–∞–µ–º "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_DICT: dict[int, dict[str, str | int | bool]] = {}


# C–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å, –Ω–∞—Å–ª–µ–¥—É–µ–º—ã–π –æ—Ç StatesGroup, –¥–ª—è –≥—Ä—É–ø–ø—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –Ω–∞—à–µ–π FSM
class FSMFillForm(StatesGroup):
    """
    –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ State, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª—è—è –≤–æ–∑–º–æ–∂–Ω—ã–µ
    —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –±–æ—Ç –≤ —Ä–∞–∑–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    Args:
        StatesGroup (_type_): _description_
    """
    fill_name = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    fill_age = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
    fill_gender = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    upload_photo = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    fill_education = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    getting_news = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—É—á–∞—Ç—å –ª–∏ –Ω–æ–≤–æ—Å—Ç–∏


@DP.message(CommandStart(), StateFilter(default_state))
async def process_start_cmd(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start –≤–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –∫
    –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /fillform
    Args:
        message (Message): _description_
    """
    await message.answer(text='–≠—Ç–æ—Ç –±–æ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É FSM\n\n'
                              '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã - '
                              '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/cancel" –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
# –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ —Å–æ–æ–±—â–∞—Ç—å, —á—Ç–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
@DP.message(Command(commands=['cancel']), StateFilter(default_state))
async def process_cancel_cmd_default(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/cancel" –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏
    —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π

    Args:
        message (Message): _description_
    """
    await message.answer(text='–û—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ. –í—ã –≤–Ω–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π\n\n'
                              '–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã - '
                              '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform')


@DP.message(Command(commands=['cancel']), ~StateFilter(default_state))
async def process_cancel_smd_fsm(message: Message, state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/cancel" –≤ –ª—é–±—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö, –∫—Ä–æ–º–µ
    —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∏ –æ—Ç–∫–ª—é—á–∞—Ç—å –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π

    Args:
        message (Message): _description_
        state (FSMContext): _description_
    """
    await message.answer(text='–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π\n\n'
                              '–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∞–Ω–∫–µ—Ç—ã - '
                              '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /fillform')
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.clear()


@DP.message(Command(commands=['fillform']), StateFilter(default_state))
async def process_fillform_cmd(message: Message, state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fillform –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏

    Args:
        message (Message): _description_
        state (FSMContext): _description_
    """
    await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
    await state.set_state(FSMFillForm.fill_name)


@DP.message(StateFilter(FSMFillForm.fill_name), F.text.isalpha())
async def process_correct_name(message: Message, state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞

    Args:
        message (Message): _description_
        state (FSMContext): _description_
    """
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "name"
    await state.update_data(name=message.text)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç')
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
    await state.set_state(FSMFillForm.fill_age)


@DP.message(StateFilter(FSMFillForm.fill_name))
async def process_incorrect_name(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ
    –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    Args:
        message (Message): _description_
        state (FSMContext): _description_
    """
    await message.answer(text='–¢–æ, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–º—è\n\n'
                              '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è\n\n'
                              '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - '
                              '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel')


@DP.message(StateFilter(FSMFillForm.fill_age),
            lambda x: x.text.isdigit() and 4 <= int(x.text) <= 120)
async def process_correct_age(message: Message, state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    Args:
        message (Message): _description_
        state (FSMContext): _description_
    """
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ –∫–ª—é—á—É "age"
    await state.update_data(age=message.text)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    female_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–ñ–µ–Ω—Å–∫–∏–π ‚ôÄ',
        callback_data='female')
    male_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–ú—É–∂—Å–∫–æ–π ‚ôÇ',
        callback_data='male')
    undefined_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='ü§∑ –ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ',
        callback_data='undefined_gender')
    keyboard_gender: list[list[InlineKeyboardButton]] = [
        [female_btn, male_btn],
        [undefined_btn]]
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard_gender)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª',
                         reply_markup=markup)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    await state.set_state(FSMFillForm.fill_gender)


@DP.message(StateFilter(FSMFillForm.fill_age))
async def process_incorrect_age(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ
    —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    Args:
        message (Message): _description_
    """
    await message.answer(
        text='–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 4 –¥–æ 120\n\n'
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å '
        '–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel')


@DP.callback_query(StateFilter(FSMFillForm.fill_gender),
                   Text(text=['female', 'male', 'undefined_gender']))
async def process_correct_gender(callback: CallbackQuery, state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª–∞ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
    Args:
        callback (CallbackQuery): _description_
        state (FSMContext): _description_
    """
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª (callback.data –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏) –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ,
    # –ø–æ –∫–ª—é—á—É "gender
    await state.update_data(gender=callback.data)
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø - –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
    # —á—Ç–æ–±—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –±—ã–ª–æ –∂–µ–ª–∞–Ω–∏—è —Ç—ã–∫–∞—Ç—å –∫–Ω–æ–ø–∫–∏
    await callback.message.delete()
    await callback.message.answer(text='–°–ø–∞—Å–∏–±–æ! –ê —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ, '
                                       '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ —Ñ–æ—Ç–æ')
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    await state.set_state(FSMFillForm.upload_photo)


@DP.message(StateFilter(FSMFillForm.fill_gender))
async def process_incorrect_gender(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ/
    –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    Args:
        message (Message): _description_
    """
    await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ '
                              '–ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª–∞\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å '
                              '–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel')


@DP.message(StateFilter(FSMFillForm.upload_photo),
            F.photo[-1].as_('largest_photo'))
async def proccess_correct_photo(message: Message,
                                 state: FSMContext,
                                 largest_photo: PhotoSize):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    –≤—ã–±–æ—Ä–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    Args:
        message (Message): _description_
        state (FSMContext): _description_
        largest_photo (PhotoSize): _description_
    """
    await state.update_data(photo_id=largest_photo.file_id,
                            photo_unique_id=largest_photo.file_unique_id)
    higher_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–í—ã—Å—à–µ–µ',
        callback_data='high_education')
    secondary_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–°—Ä–µ–¥–Ω–µ–µ',
        callback_data='secondary_education')
    none_edu_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–ù–µ—Ç',
        callback_data='no_education')
    keyboard_edu: list[list[InlineKeyboardButton]] = [
        [higher_btn, secondary_btn],
        [none_edu_btn]]
    markup: InlineKeyboardMarkup = InlineKeyboardMarkup(
        inline_keyboard=keyboard_edu)
    await message.answer(text='–°–ø–∞—Å–∏–±–æ!\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
                         reply_markup=markup)
    await state.set_state(FSMFillForm.fill_education)


@DP.message(StateFilter(FSMFillForm.upload_photo))
async def process_incorrect_photo(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ/
    –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    Args:
        message (Message): _description_
    """
    await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '
                              '–≤–∞—à–µ —Ñ–æ—Ç–æ\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å '
                              '–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel')


@DP.callback_query(StateFilter(FSMFillForm.fill_education),
                   Text(text=['high_education',
                              'secondary_education',
                              'no_education']))
async def process_correct_education(callback: CallbackQuery,
                                    state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤
    —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏
    Args:
        callback (CallbackQuery): _description_
        state (FSMContext): _description_
    """
    await state.update_data(education=callback.data)
    agreed_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–î–∞',
        callback_data='agreed')
    declined_btn: InlineKeyboardButton = InlineKeyboardButton(
        text='–ù–µ—Ç',
        callback_data='declined')
    keyboard_news: list[list[InlineKeyboardButton]] = [[agreed_btn,
                                                        declined_btn]]
    markup: InlineKeyboardMarkup = InlineKeyboardMarkup(
        inline_keyboard=keyboard_news)
    await callback.message.edit_text(text='–°–ø–∞—Å–∏–±–æ!\n\n'
                                          '–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥.\n'
                                          '–•–æ—Ç–µ–ª–∏ –±—ã –≤—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏?',
                                     reply_markup=markup)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏–ª–∏ –Ω–µ—Ç
    await state.set_state(FSMFillForm.getting_news)


@DP.message(StateFilter(FSMFillForm.fill_education))
async def process_incorrect_education(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ/
    –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    Args:
        message (Message): _description_
    """
    await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ '
                              '–ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ '
                              '–ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '
                              '–∫–æ–º–∞–Ω–¥—É /cancel')


@DP.callback_query(StateFilter(FSMFillForm.getting_news),
                   Text(text=['agreed', 'declined']))
async def process_correct_news(callback: CallbackQuery, state: FSMContext):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–ª—É—á–∞—Ç—å –∏–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏
    –≤—ã–≤–æ–¥–∏—Ç—å –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    Args:
        callback (CallbackQuery): _description_
        state (FSMContext): _description_
    """
    # C–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–ª—é—á—É "wish_news"
    await state.update_data(news=callback.data == 'agreed')
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö" –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø–æ –∫–ª—é—á—É id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    USER_DICT[callback.from_user.id] = await state.get_data()
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await state.clear()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await callback.message.edit_text(text='–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n'
                                          '–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π')
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É
    await callback.message.answer(text='–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–π '
                                       '–∞–Ω–∫–µ—Ç—ã - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /showdata')


@DP.message(StateFilter(FSMFillForm.getting_news))
async def process_incorrect_news(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω–æ/–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    Args:
        message (Message): _description_
    """
    await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏!\n\n'
                              '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã - '
                              '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel')


@DP.message(Command(commands=['showdata']), StateFilter(default_state))
async def process_showdata_cmd(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã /showdata –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç
    –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã, –ª–∏–±–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    Args:
        message (Message): _description_
    """
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ "–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    if message.from_user.id in USER_DICT:
        user = USER_DICT[message.from_user.id]
        await message.answer_photo(
            photo=user['photo_id'],
            caption=f'–ò–º—è: {user["name"]}\n'
                    f'–í–æ–∑—Ä–∞—Å—Ç: {user["age"]}\n'
                    f'–ü–æ–ª: {user["gender"]}\n'
                    f'–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {user["education"]}\n'
                    f'–ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏: {user["news"]}')
    else:
        # –ï—Å–ª–∏ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –Ω–µ—Ç - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å
        await message.answer(text='–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω—è–ª–∏ –∞–Ω–∫–µ—Ç—É. '
                                  '–ß—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '
                                  '–∫–æ–º–∞–Ω–¥—É /fillform')


@DP.message(StateFilter(default_state))
async def process_other(message: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ —Ç–µ—Ö –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å
    –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã, –≤–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    Args:
        message (Message): _description_
    """
    await message.reply(text='–Ø —Ç–∞–∫–æ–µ –Ω–µ –ø–æ–Ω–∏–º–∞—é.')


if __name__ == '__main__':
    DP.run_polling(BOT)
